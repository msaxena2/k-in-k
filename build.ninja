builddir = .build
k_bindir = ext/k/k-distribution/target/release/k/bin

rule kompile
    description = Kompiling $in ($backend)
    command     = $k_bindir/kompile --backend $backend --debug $
                                        --directory $$(dirname $$(dirname $out)) $in
rule krun
    description = Krun $in
    command     = $k_bindir/krun --directory $directory $in > $out

rule kast
    description = kast $in
    command     = $k_bindir/kast --directory $directory --kore $in > $out

rule kore-exec
    description = kore-exec $in
    command     = stack exec -- kore-exec $kore --module $module --pattern $in > $out

rule kore-parser
    description = kore-parser $in
    command     = stack exec -- kore-parser $kore --module $module $in --no-print-definition

# Remove attributes from Kore files
rule remove-attributes
    description = Remove attributes
    command     = sed 's/\[.*//' $in > $out

rule check-test-result
    description = Checking $in
    command     = git diff --no-index $in $expected

rule remove-comments
    description = Remove commented out lines
    command     = sed '/.*\/\/.*/d' $in > $out

rule krun-stdout
    description = KRun and pretty print to stdout
    command     = $k_bindir/krun  --debug --directory $directory $in

# Foobar
# ------

build $builddir/foobar/foobar-kompiled/timestamp : kompile foobar/foobar.k
    backend = kore
build foobar/foobar.kore.parses : kore-parser foobar/foobar.kore
    module = FOOBAR
build $builddir/foobar/foobar.noattr : remove-attributes foobar/foobar.kore
build foobar/foobar.uncommented.kore : remove-comments   foobar/foobar.kore
default foobar/foobar.kore.parses

# Foobar - translation
# --------------------

build $builddir/foobar/t/foobar.kaux.output  : krun foobar/t/foobar.kaux $
                                             | $builddir/kaux/kaux-kompiled/timestamp
  directory = $builddir/kaux

build foobar/t/foobar.kaux.test : check-test-result $builddir/foobar/t/foobar.kaux.output
  expected = foobar/t/foobar.kaux.expected
default  foobar/t/foobar.kaux.test

# Foobar - programs
# -----------------

# foobar/bar.foobar

build $builddir/foobar/programs/bar.foobar.kore   : kast foobar/programs/bar.foobar $
                                        | $builddir/foobar/foobar-kompiled/timestamp
    directory = $builddir/foobar/
build $builddir/foobar/programs/bar.foobar.output : kore-exec $builddir/foobar/programs/bar.foobar.kore $
                                        | foobar/foobar.kore
    kore = foobar/foobar.kore
    module = FOOBAR
default $builddir/foobar/programs/bar.foobar.output
build foobar/programs/bar.foobar.test : check-test-result $builddir/foobar/programs/bar.foobar.output
    expected = foobar/programs/bar.foobar.expected
default foobar/programs/bar.foobar.test

# foobar/buzz.foobar

build $builddir/foobar/programs/buzz.foobar.kore   : kast foobar/programs/buzz.foobar $
                                        | $builddir/foobar/foobar-kompiled/timestamp
    directory = $builddir/foobar/
build $builddir/foobar/programs/buzz.foobar.output : kore-exec $builddir/foobar/programs/buzz.foobar.kore $
                                        | foobar/foobar.kore
    kore = foobar/foobar.kore
    module = FOOBAR
build foobar/programs/buzz.foobar.test : check-test-result $builddir/foobar/programs/buzz.foobar.output
    expected = foobar/programs/buzz.foobar.expected
default foobar/programs/buzz.foobar.test

# kaux
# -----

build $builddir/kaux/kaux-kompiled/timestamp  : kompile kaux.k $
                                                | kore.k
  backend = java

build $builddir/kaux/t/foobar.kaux.output  : krun kaux/t/foobar.kaux $
                                       | $builddir/kaux/kaux-kompiled/timestamp
  directory = $builddir/kaux

build kaux/t/foobar.kaux.test  : check-test-result $builddir/kaux/t/foobar.kaux.output
  expected = kaux/t/foobar.kaux.expected
# default kaux/t/foobar.kaux.test


build krun-kaux: krun-stdout kaux/t/foobar.kaux $
                    | $builddir/kaux/kaux-kompiled/timestamp
    directory = $builddir/kaux
